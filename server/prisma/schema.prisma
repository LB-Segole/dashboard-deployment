datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Contact {
  id              String    @id @default(uuid())
  firstName       String
  lastName        String
  email          String?
  phone          String
  company        String?
  notes          String?
  tags           String[]
  lastContactedAt DateTime?
  nextScheduledCall DateTime?
  callHistory    Json[]
  customFields   Json
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  campaigns      CampaignContact[]
}

model Campaign {
  id          String    @id @default(uuid())
  name        String
  description String?
  status      String
  type        String
  schedule    Json
  aiConfig    Json
  metrics     Json
  contacts    CampaignContact[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model CampaignContact {
  id          String    @id @default(uuid())
  campaign    Campaign  @relation(fields: [campaignId], references: [id])
  campaignId  String
  contact     Contact   @relation(fields: [contactId], references: [id])
  contactId   String
  status      String
  attempts    Int       @default(0)
  lastAttempt DateTime?
  nextAttempt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([campaignId, contactId])
}

model VoiceConfig {
  id              String    @id @default(uuid())
  name            String
  description     String?
  provider        String
  voiceId         String
  settings        Json
  personality     Json
  audioProcessing Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model CallRecord {
  id              String    @id @default(uuid())
  contactId       String
  campaignId      String?
  type            String
  status          String
  duration        Int
  recordingUrl    String?
  transcription   String?
  sentiment       String?
  notes           String?
  metrics         Json
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String
  firstName       String?
  lastName        String?
  role            String
  settings        Json?
  lastLoginAt     DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Organization {
  id              String    @id @default(uuid())
  name            String
  plan            String
  settings        Json
  apiKeys         Json[]
  billingInfo     Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
} 